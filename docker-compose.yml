# version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: course_selection_system
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  # 后端服务实例1
  backend-1:
    build: ./server
    env_file:
      - ./server/docker.env
    volumes:
      - ./server/data:/app/data
      - ./server/uploads:/app/uploads
      - ./server/temp:/app/temp
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # 后端服务实例2
  backend-2:
    build: ./server
    env_file:
      - ./server/docker.env
    volumes:
      - ./server/data:/app/data
      - ./server/uploads:/app/uploads
      - ./server/temp:/app/temp
    depends_on:
      - mysql
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # 前端服务
  frontend:
    build: ./client
    depends_on:
      - backend-1
      - backend-2
    networks:
      - app-network
    restart: unless-stopped

  # Nginx负载均衡器
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend-1
      - backend-2
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge